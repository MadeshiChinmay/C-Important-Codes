#include<bits/stdc++.h>
using namespace std;

class TrieNode {
public :
    TrieNode* children[26];
    bool isTerminal;
    char data;

    TrieNode(char data) {
        this->data = data;
        isTerminal = 0;
        for(int i=0; i<26; i++) children[i] = NULL;
    }
};
class Trie {
public:
    TrieNode* root = NULL;

    Trie() {
        root = new TrieNode('\0');
    }

    void insert(TrieNode* root , string word)
    {
        if(word.size() == 0) {
            root->isTerminal = 1;
            return;
        }
        char ch = word[0];
        string temp = word.substr(1);
        int ind = ch-'a';
        TrieNode* child;
        if(root->children[ind]) {
            child = root->children[ind];
        }
        else
        {
            child = new TrieNode(ch);
            root->children[ind] = child;
        }

        insert(child , temp);
    }
    void HelperInsert(string word)
    {
        insert(root , word);
    }
    bool helper(TrieNode* root,string word)
    {

        if(word.size()==1 && root->isTerminal==1)return 1;

        if(root->children[word[0]-'a']) {
            return helper(root->children[word[0]-'a'],word.substr(1));
        }
        return 0;
    }
    bool search(string word) {
        // Write your code here
        cout<<word<<endl;
        return helper(root,word);
    }


};


int main()
{

}
